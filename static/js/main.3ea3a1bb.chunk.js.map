{"version":3,"sources":["Components/Helpers.js","Components/solveCycle.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["toBinaryArrWithLeadingZeroes","n","length","binary","Math","ceil","floor","toBinary","split","map","parseInt","toDecimal","isArrayInArray","arr","item","some","r","every","value","index","solveCycle","matrix","input","cycle","calculateNextValue","node","_","i","acc","forEach","mval","j","nextNode","push","generateCycle","genie","require","Simulation","Individual","Chromosome","Main","useState","gaData","setGaData","useEffect","computeWithGA","maxVal","row","join","metaData","CycleFinder","individual","data","getDna","score","bestScore","gene","top","winCondition","fitness","binarySeed","max","random","prototype","mutationRate","popSize","numParents","maxGenerations","selection","ga","Selection","rouletteWheel","crossover","Crossover","singlePoint","onCalculateFitness","state","avgFitness","averageFitness","gen","currentGeneration","topCycle","dna","genes","start","Array","reduce","console","log","className","q","iteration","style","backgroundColor","toFixed","App","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ea3a1bb.chunk.js","sourcesContent":["export const getRandomInt = (max) =>\n  Math.floor(Math.random() * Math.floor(max));\n\nexport const toBinary = (n) => {\n  let binary = '';\n  if (n < 0) {\n    n = n >>> 0;\n  }\n  while (Math.ceil(n / 2) > 0) {\n    binary = (n % 2) + binary;\n    n = Math.floor(n / 2);\n  }\n  return binary;\n};\n\nexport const toBinaryArrWithLeadingZeroes = (n, length) => {\n  let binary = toBinary(n);\n  while (binary.length < length) {\n    binary = '0' + binary;\n  }\n  binary = binary.split('').map((n) => parseInt(n));\n  return binary;\n};\n\nexport const toDecimal = (n) => parseInt(n, 2);\n\nexport const isArrayInArray = (arr, item) =>\n  arr.some((r) => r.every((value, index) => item[index] === value));\n\nexport const arraysEqual = (_arr1, _arr2) => {\n  if (\n    !Array.isArray(_arr1) ||\n    !Array.isArray(_arr2) ||\n    _arr1.length !== _arr2.length\n  ) {\n    return false;\n  }\n\n  const arr1 = _arr1.concat().sort();\n  const arr2 = _arr2.concat().sort();\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport const getColor = () =>\n  'hsl(' +\n  360 * Math.random() +\n  ',' +\n  (25 + 70 * Math.random()) +\n  '%,' +\n  (85 + 10 * Math.random()) +\n  '%)';\n","import { isArrayInArray } from './Helpers';\n\nconst solveCycle = (matrix, input) => {\n  const generateCycle = () => {\n    const cycle = [input];\n\n    const calculateNextValue = (node) =>\n      node.map((_, i) => {\n        let acc = 0;\n        matrix[i].forEach((mval, j) => {\n          if (mval === 1) acc += node[j];\n        });\n        return acc % 2;\n      });\n\n    while (true) {\n      const nextNode = calculateNextValue(cycle[cycle.length - 1]);\n      if (isArrayInArray(cycle, nextNode)) {\n        cycle.push(nextNode);\n        return cycle;\n      }\n      cycle.push(nextNode);\n    }\n  };\n  return generateCycle();\n};\n\nexport default solveCycle;\n","import React, { useState, useEffect } from 'react';\nimport {\n  toDecimal,\n  toBinaryArrWithLeadingZeroes,\n  getRandomInt,\n  getColor,\n} from './Helpers';\nimport './Main.css';\nimport solveCycle from './solveCycle';\nconst genie = require('@adrianperea/genie.js');\nconst { Simulation, Individual, Chromosome } = genie;\n\nconst Main = () => {\n  const [gaData, setGaData] = useState([]);\n\n  useEffect(() => {\n    computeWithGA();\n  }, []);\n\n  const matrix = [\n    [1, 0, 1, 1, 1, 1],\n    [1, 0, 0, 0, 0, 0],\n    [0, 1, 1, 1, 1, 1],\n    [0, 0, 1, 0, 0, 0],\n    [0, 0, 0, 1, 0, 0],\n    [0, 0, 0, 0, 1, 1],\n  ];\n\n  const maxVal = toDecimal(matrix.map((row) => '1').join('')) + 1;\n\n  const computeManually = () => {\n    const solvedCycles = [...Array(maxVal)].map((_, i) =>\n      solveCycle(matrix, toBinaryArrWithLeadingZeroes(i, matrix.length))\n    );\n    return solvedCycles.reduce(\n      (acc, cycle) => (cycle.length > acc[1] ? [cycle, cycle.length] : acc),\n      [[], 0]\n    );\n  };\n\n  const computeWithGA = () => {\n    let metaData = [];\n    class CycleFinder extends Simulation {\n      calculateFitness(individual, data) {\n        const cycle = solveCycle(matrix, individual.getDna(0));\n        let score = 0;\n        data.bestScore[0][0].forEach((gene, i) => {\n          if (gene === cycle[0][i]) ++score;\n        });\n        const fitness = score / data.bestScore[0][0].length;\n        return fitness;\n      }\n      shouldFinish(top) {\n        const winCondition = top.fitness >= 1;\n        if (winCondition) setGaData(metaData);\n        return winCondition;\n      }\n    }\n\n    const generateBinaryGene = () => getRandomInt(2);\n\n    const binarySeed = new Chromosome(matrix.length, generateBinaryGene);\n\n    const binaryIndividual = new Individual(binarySeed);\n\n    const config = {\n      prototype: binaryIndividual,\n      data: { bestScore },\n      mutationRate: 0.05,\n      popSize: 10,\n      numParents: 5,\n      maxGenerations: 100,\n      selection: genie.ga.Selection.rouletteWheel,\n      crossover: genie.ga.Crossover.singlePoint,\n      onCalculateFitness(state) {\n        metaData.push({\n          avgFitness: state.averageFitness,\n          gen: state.currentGeneration,\n          top: state.top,\n          topCycle: solveCycle(matrix, state.top.dna[0].genes),\n        });\n      },\n    };\n\n    const cycles = new CycleFinder(config);\n    cycles.start();\n  };\n\n  const bestScore = computeManually();\n  console.log(bestScore[0][0]);\n  return (\n    <div className='main'>\n      <h2>Linear-feedback shift register</h2>\n      <div>\n        Companion matrix:\n        {matrix.map((row, i) => (\n          <div key={i} className='matrix-row'>\n            {row.map((q, i) => (\n              <div key={i} className='matrix-item'>\n                {q}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      <div className='solver-manual'>\n        <h4>Longest cycle (computed manually)</h4>\n        <div>Length: {bestScore[1]}</div>\n        <div>\n          {bestScore[0].map((node, i) => (\n            <p key={i}>\n              {node} ({toDecimal(node.join(''))})\n            </p>\n          ))}\n        </div>\n      </div>\n      <div>\n        <h3>Computed using Genetic Algorithm (refresh for another set): </h3>\n      </div>\n      {gaData.length > 0 && (\n        <div className='solver-list'>\n          {gaData.map((iteration, i) => (\n            <div\n              key={i}\n              className='solver-ga'\n              style={{ backgroundColor: getColor() }}\n            >\n              {console.log(iteration)}\n              <h3>Generation #{iteration.gen}</h3>\n              <div>\n                Avg gen fitness ({(iteration.avgFitness / 1).toFixed(4)})\n              </div>\n              <div>Seed: ({iteration.top.dna[0].genes})</div>\n\n              {i === gaData.length - 1 && (\n                <>\n                  <div>Top cycle ({iteration.topCycle.length}):</div>\n                  <div>\n                    {iteration.topCycle.map((node, i) => (\n                      <p key={i}>\n                        {node} ({toDecimal(node.join(''))})\n                      </p>\n                    ))}\n                  </div>\n                </>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","import './App.css';\nimport Main from './Components/Main';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n      <footer className='App-footer'>\n        <span>Szymon Galazka 2020</span>\n        <a\n          className='App-link'\n          href='https://github.com/SzymonGalazka/lfsr'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Repository link\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}