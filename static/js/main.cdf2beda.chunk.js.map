{"version":3,"sources":["Helpers.js","Components/LFSR.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["isArrayInArray","arr","item","some","r","every","value","index","LFSR","matrix","input","cycle","calculateNextValue","node","map","q","i","acc","forEach","mval","j","nextNode","length","push","generateCycle","n","join","parseInt","Main","className","App","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAcaA,G,iBAAiB,SAACC,EAAKC,GAAN,OAC5BD,EAAIE,MAAK,SAACC,GAAD,OAAOA,EAAEC,OAAM,SAACC,EAAOC,GAAR,OAAkBL,EAAKK,KAAWD,UC4B7CE,EAxCF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAwBhBC,EAvBgB,WAapB,IAZA,IAAMA,EAAQ,CAACD,GAETE,EAAqB,SAACC,GAC1B,OAAOA,EAAKC,KAAI,SAACC,EAAGC,GAClB,IAAIC,EAAM,EAIV,OAHAR,EAAOO,GAAGE,SAAQ,SAACC,EAAMC,GACV,IAATD,IAAYF,GAAOJ,EAAKO,OAEvBH,EAAM,QAIJ,CACX,IAAMI,EAAWT,EAAmBD,EAAMA,EAAMW,OAAS,IACzD,GAAItB,EAAeW,EAAOU,GAExB,OADAV,EAAMY,KAAKF,GACJV,EAGTA,EAAMY,KAAKF,IAGDG,GACd,OACE,gCACE,gDAAmBb,EAAMW,UACzB,8CAAiBZ,KACjB,8BACGC,EAAMG,KAAI,SAACD,EAAMG,GAAP,OACT,8BACGH,EADH,MDtBgBY,ECuBKZ,EAAKa,KAAK,IDvBTC,SAASF,EAAG,ICsBlC,MAAQT,GDtBO,IAACS,WEYXG,EApBF,WACX,IAAMnB,EAAS,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAET,OACE,sBAAKoB,UAAU,OAAf,UACE,gEACA,kDAEGpB,EAAOK,KAAI,SAACC,GAAD,OACV,qBAAKc,UAAU,cAAf,SAA8Bd,UAGlC,cAAC,EAAD,CAAMN,OAAQA,EAAQC,MAAO,CAAC,EAAG,EAAG,SCG3BoB,MAnBf,WACE,OACE,sBAAKD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,yBAAQA,UAAU,aAAlB,UACE,uDACA,mBACEA,UAAU,WACVE,KAAK,wCACLC,OAAO,SACPC,IAAI,sBAJN,oCCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cdf2beda.chunk.js","sourcesContent":["export const toBinary = (n) => {\n  let binary = '';\n  if (n < 0) {\n    n = n >>> 0;\n  }\n  while (Math.ceil(n / 2) > 0) {\n    binary = (n % 2) + binary;\n    n = Math.floor(n / 2);\n  }\n  return binary;\n};\n\nexport const toDecimal = (n) => parseInt(n, 2);\n\nexport const isArrayInArray = (arr, item) =>\n  arr.some((r) => r.every((value, index) => item[index] === value));\n","import React from 'react';\nimport { isArrayInArray, toDecimal } from '../Helpers';\n\nconst LFSR = ({ matrix, input }) => {\n  const generateCycle = () => {\n    const cycle = [input];\n\n    const calculateNextValue = (node) => {\n      return node.map((q, i) => {\n        let acc = 0;\n        matrix[i].forEach((mval, j) => {\n          if (mval === 1) acc += node[j];\n        });\n        return acc % 2;\n      });\n    };\n\n    while (true) {\n      const nextNode = calculateNextValue(cycle[cycle.length - 1]);\n      if (isArrayInArray(cycle, nextNode)) {\n        cycle.push(nextNode);\n        return cycle;\n        // return cycle.map((binaryVal) => toDecimal(binaryVal.join('')));\n      }\n      cycle.push(nextNode);\n    }\n  };\n  const cycle = generateCycle();\n  return (\n    <div>\n      <h3>Cycle length: {cycle.length}</h3>\n      <h5>Start node: {input}</h5>\n      <div>\n        {cycle.map((node, i) => (\n          <p key={i}>\n            {node} ({toDecimal(node.join(''))})\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LFSR;\n","import React from 'react';\nimport './Main.css';\nimport LFSR from './LFSR';\n\nconst Main = () => {\n  const matrix = [\n    [1, 1, 1],\n    [1, 1, 1],\n    [0, 1, 0],\n  ];\n  return (\n    <div className='main'>\n      <h2>Linear-feedback shift register</h2>\n      <p>\n        Companion matrix:\n        {matrix.map((q) => (\n          <div className='matrix-item'>{q}</div>\n        ))}\n      </p>\n      <LFSR matrix={matrix} input={[1, 0, 0]} />\n    </div>\n  );\n};\n\nexport default Main;\n","import './App.css';\nimport Main from './Components/Main';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n      <footer className='App-footer'>\n        <span>Szymon Galazka 2020</span>\n        <a\n          className='App-link'\n          href='https://github.com/SzymonGalazka/lfsr'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          Repository link\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}